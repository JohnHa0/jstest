!
function(e) {
    e.checkAccessKeyLuckyDrawTotal = function(o) {
        return o = $.extend({},
        o),
        $.Deferred(function(n) {
            e.optimize1072042().excGameType && (o.startGame || e.accessKeyOnceInput) ? (e.accessKeyOnceInput = !1, e.otherAjaxComplete(), e.hideLoadToast(), HdGameAsynFn({
                fn: "HdGame.showAccessKeyPopup",
                res_key: "js_accessKeyPopup"
            },
            {
                title: g_config.accesspopuptitle,
                callback: function() {
                    n.resolve()
                }
            })) : $.ajax({
                type: "post",
                url: g_config.apiAjaxUrl + "accessKey/getLuckyDrawTotal",
                data: {
                    gameId: g_config.gameId,
                    openId: g_config.openId
                },
                dataType: "json",
                success: function(a) {
                    var i = a.msg || "系统繁忙，请稍后重试";
                    if (a.rt) return e.showMsgToast2({
                        bodyMsg: i
                    }),
                    void n.reject();
                    a.total > 0 ? n.resolve() : (e.otherAjaxComplete(), e.hideLoadToast(), o.notLuckyDrawTotal && o.notLuckyDrawTotal(), HdGameAsynFn({
                        fn: "HdGame.showAccessKeyPopup",
                        res_key: "js_accessKeyPopup"
                    },
                    {
                        title: g_config.accesspopuptitle,
                        callback: function() {
                            n.resolve()
                        }
                    }))
                },
                error: n.reject
            })
        })
    },
    e.addJoinGameBehavior = function() {
        e.updateGroupMemberJoin(2);
        var o = void 0 !== g_config.ipInfo.provice ? g_config.ipInfo.provice: "",
        n = void 0 !== g_config.ipInfo.city ? g_config.ipInfo.city: "",
        a = void 0 !== g_config.ipInfo.district ? g_config.ipInfo.district: "";
        $.ajax({
            url: g_config.apiAjaxUrl + "gameStat/joinGameBehavior?openId=" + g_config.openId + "&canal=" + fromCanal,
            type: "post",
            data: {
                gameId: g_config.gameId,
                openId: g_config.openId,
                shareDeep: g_config.shareDeep,
                provice: o,
                city: n,
                district: a,
                headImg: g_config.headImg,
                userName: g_config.userName
            },
            error: function(e, o) {
                hg.fire("luckDrawErr")
            },
            success: function(o) {
                "findAct" == _fromCbGameOrigin && e.logDog(1000314, 107),
                "findAct" == _fromCbGameOrigin && _fromCardBag && (1 == _isShowWinnersList && e.logDog(1000314, 110), 2 == _isShowWinnersList && e.logDog(1000314, 113)),
                _fromCardBag && (e.tlog("_qbAid", _qbAid), e.tlog("g_config.openId", g_config.openId), e.tlog("g_config.aid", g_config.aid), e.tlog("g_config.gameId", g_config.gameId), e.qbLogForTargetUserA(), _isTargetUser && e.logDog(1000314, 14), _isTargetUser && !_isFinishJoinGame && e.logDog(1000351, 7))
            }
        })
    },
    e.qbLogForTargetUserA = function() {
        $.ajax({
            url: g_config.apiAjaxUrl + "card4WxApp/logToUser",
            type: "post",
            data: {
                aid: _qbAid,
                faiOpenId: g_config.openId,
                fromPage: 3,
                gameAid: g_config.aid,
                gameId: g_config.gameId
            },
            success: function(o) {
                e.tlog("qbLogForTargetUserA_aid", _qbAid)
            }
        })
    },
    e.getIsOutofJoinNumFlag = function(o) {
        var n = 71 == g_config.style ? "checkJoinGroupNum": "checkJoinNum",
        a = e.jointUrlArg(g_config.apiAjaxUrl + "playerJoinGame/" + n, e.jointParams({
            gameId: g_config.gameId,
            openId: g_config.openId
        }));
        return $.ajax({
            type: "POST",
            url: a,
            dataType: "json",
            success: function(n) {
                e.tlog("isOutofJoinNum", n),
                o && n && o(null, n)
            },
            error: function() {
                o && o("error")
            }
        })
    },
    e.checkDiffRedPacketSendWay = function() {
        return $.Deferred(function(e) {
            $.ajax({
                type: "post",
                url: g_config.apiAjaxUrl + "mobi/isDiffRedPacketSendWay",
                data: {
                    storeId: g_config.storeId,
                    areaId: g_config.areaId,
                    gameId: g_config.gameId
                },
                success: function(o) {
                    var n = $.parseJSON(o);
                    n.success && e.resolve(n.isDiffSendWay)
                },
                error: function() {
                    e.resolve(!1)
                }
            })
        })
    },
    e.interceptVideoFirstImg = function(o, n, a) {
        return $.Deferred(function(i) {
            $.ajax({
                type: "post",
                url: g_config.apiAjaxUrl + "uploadFile/addFirstImg",
                data: {
                    aid: o,
                    gameId: n,
                    path: a
                },
                error: function() {
                    i.reject(),
                    e.showMsgToast("服务繁忙，请稍候重试")
                },
                success: function(e) {
                    var o = $.parseJSON(e);
                    o.success ? i.resolve({
                        firstImg: o.data.firstImg
                    }) : i.reject()
                }
            })
        })
    },
    e.refreshGiftListAndAwardDetail = function(o, n, a, i) {
        $.ajax({
            type: "post",
            url: g_config.apiAjaxUrl + "rank/getGiftList",
            data: {
                gameId: o,
                openId: n,
                code: a
            },
            success: function(o) {
                var n = $.parseJSON(o);
                n.success && (e.changeCodeInfo(i, n.list[0]), e.openAwardDetail(n.list[0]))
            }
        })
    },
    e.checkOpenGroupMemberJoin = function() {
        return $.Deferred(function(o) {
            e.getWxGroupMemberJoinFlag().then(function(n) {
                n && "" === g_config.openGId ? e.checkInWebView().then(function(n) {
                    var a = "";
                    a = n ? "参与失败，您当前不在指定的可参与群聊内": "当前活动已开启仅群成员可参与功能，请从小程序中打开活动",
                    e.showNewMsgToast({
                        msg: a
                    }),
                    o.reject()
                }) : o.resolve()
            }).fail(function() {
                o.reject()
            })
        })
    },
    e.getWxGroupMemberJoinFlag = function() {
        return $.Deferred(function(o) {
            $.ajax({
                type: "get",
                url: g_config.apiAjaxUrl + "game/isForbidGameShare",
                success: function(n) {
                    n.success ? o.resolve(n.data.isOpenWxGroupChatMemberJoin) : (e.showMsg("网络繁忙，请重试"), o.reject())
                },
                error: function() {
                    e.showMsg("网络状况不佳，请检查网络设置后重试"),
                    o.reject()
                }
            })
        })
    },
    e.updateGroupMemberJoin = function(o) {
        e.getWxGroupMemberJoinFlag().then(function(n) { ! _manage && n && "" !== g_config.openGId && e.Res.loadg("groupMemberJoinFunc").then(function() {
                GroupMemberJoin.updateGroupMemberJoin(o)
            })
        })
    },
    e.sendQuestionGameReq = function(o, n, a, i, t, r, g) {
        return $.Deferred(function(c) {
            if (g_config.openNew_Qt) {
                if ("check" == o) {
                    var s = [];
                    if (void 0 === i) s = g_config.qtInfoParam.allAnswerList;
                    else if ("string" == typeof i) { (d = {}).answer = a,
                        d.sign = i,
                        s.push(d)
                    } else if ("object" == typeof i) for (var f = 0; f < i.length; f++) {
                        var d; (d = {}).answer = $.parseJSON(a)[f],
                        d.sign = i[f],
                        s.push(d)
                    }
                    g_config.qtInfoParam.allAnswerList = s
                }
                g_config.qtInfoParam.qtNum = g_config.qtNum,
                g_config.questionScore && (g_config.qtInfoParam.qtScore = g_config.questionScore);
                var p = {
                    gameId: g_config.gameId,
                    req_Type: o,
                    isManage: n,
                    titleIndex: t,
                    playerAnswer: a,
                    qtInfoParam: g_config.qtInfoParam,
                    openId: g_config.openId,
                    isOrder: g
                };
                r && $.extend(p, r);
                var u = $.ajax({
                    type: "post",
                    url: g_config.apiAjaxUrl + "game4Qt/qtGame_Req?aid=" + g_config.aid,
                    timeout: 5e3,
                    data: {
                        questionObj: $.toJSON(p)
                    },
                    error: function(o, n, a) {
                        e.showMsg("网络繁忙，请重试"),
                        e.logStd("testLog_Game", "game4Qt/qtGame_Req-fail-" + JSON.stringify(o) + "textStatus: " + n + "errorThrown: " + a)
                    },
                    success: function(n) {
                        var a = $.parseJSON(n);
                        a.success ? ("get" == o && (g_config.qtInfoParam.exposure_QtList = g_config.qtInfoParam.exposure_QtList ? g_config.qtInfoParam.exposure_QtList: [], g_config.qtInfoParam.exposure_QtList.push(a.data.titleIndex), g_config.qtInfoParam.moreAnswer = a.data.moreAnswer, g_config.qtInfoParam.allAnswerList = a.data.allAnswerList), "check" != o || $.isEmptyObject(a.data.score_Qt) || ($.isEmptyObject(g_config.qtInfoParam.score_Qt) ? g_config.qtInfoParam.score_Qt = a.data.score_Qt: a.data.score_Qt.score >= g_config.qtInfoParam.score_Qt.score && (g_config.qtInfoParam.score_Qt = a.data.score_Qt)), g_config.qtInfoParam.playingAns = a.data.playingAns, g_config.qtInfoParam.r_List = a.data.r_List, g_config.qtInfoParam.analyze = a.data.analyze, c.resolve(a.data)) : a.isModify ? e.showMsg(a.msg, 0, "返回首页",
                        function() {
                            window.location.reload()
                        }) : e.showMsg(a.msg || "网络繁忙，请刷新重试")
                    },
                    complete: function(e, o) {
                        "timeout" === o && u.abort()
                    }
                })
            } else c.resolve()
        })
    },
    e.startAndSubOdds = e.firstPromise(function() {
        return new Promise(function(o, n) {
            if ( - 1 == [1, 6].indexOf(g_config.newGameType) && 125 !== g_config.style || !(0 == gameType || e.optimize1072042().def && [1, 3, 4].includes(gameType)) || g_config.openCreditJoin4Credit) return o();
            var a = {
                style: g_config.style,
                openId: g_config.openId,
                gameId: g_config.gameId,
                aid: g_config.aid,
                name: g_config.userName,
                playerId: g_config.playerId,
                headImg: g_config.headImg,
                canal: fromCanal,
                uid: g_config.uid,
                extra: g_config.extra,
                playerOrigin: g_config.playerOrigin
            };
            $.ajax({
                type: "post",
                url: g_config.apiAjaxUrl + "playerJoinGame/startJoinActivity?",
                data: JSON.stringify(a),
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                error: function() {
                    e.showMsgToast("服务繁忙，请稍候重试"),
                    n()
                },
                success: function(a) {
                    //0 == a.rt ? (g_config.playerId = a.data.playerId, o()) : (e.showMsgToast(a.msg || "服务繁忙，请稍候重试"), n())
					g_config.playerId = 444, o()
                }
            })
        })
    },
    e)
} (HdGame);