!
function(t, e) {
    var o = !1;
    function i(i) {
        e.tlog("gps:getAreaByWx5", i);
        var r = Date.now();
        return t.Deferred(function(a) {
            if (g_config.test && !g_config.isUseNewMapApi) return i.provice = "广东省",
            i.city = "广州市",
            i.district = "海珠区",
            a.resolve();
            var s;
            if (e.tlog("locationTime", null == i.locationTime), !(null == i.locationTime || Date.now() - i.locationTime > 3e5)) return a.resolve();
            try {
                if (g_config.isUseNewMapApi || g_config.fromFlyerIframe) new qq.maps.Geolocation("IGEBZ-2CYKR-Z4XWD-WCWQ3-5HFJS-5TF2P", "myapp").getLocation(function(o) {
                    e.tlog("gps:getLocation for special success", t.toJSON(o)),
                    clearTimeout(s),
                    i.contry = o.nation,
                    i.provice = o.province,
                    i.city = o.city,
                    i.district = o.district,
                    i.locationTime = Date.now(),
                    a.resolve()
                },
                function(o) {
                    e.tlog("gps:getLocation for special fail", t.toJSON(o)),
                    e.logStd("gps-LogStd", "run gps:getLocation for special fail" + t.toJSON(o)),
                    clearTimeout(s),
                    a.reject()
                });
                else wx.ready(function() {
                    e.tlog("getAreaByWx: ", "wxReady callback"),
                    wx.getLocation({
                        type: "wgs84",
                        success: function(c) {
                            n("location", r),
                            clearTimeout(s),
                            r = Date.now();
                            var l, g, d = c.latitude,
                            u = c.longitude;
                            e.tlog("gps:getLocation", d + ", " + u),
                            (l = d, g = u, t.Deferred(function(i) {
                                var a, s = new qq.maps.Geocoder,
                                c = new qq.maps.LatLng(l, g);
                                s.getAddress(c),
                                s.setComplete(function(t) {
                                    if (n("address", r), e.tlog("gps:getAddressByLatLng:setComplete", t), clearTimeout(a), !t) return i.reject();
                                    var o = t.detail.addressComponents.country,
                                    s = t.detail.addressComponents.province,
                                    c = t.detail.addressComponents.city,
                                    l = t.detail.addressComponents.district;
                                    i.resolve({
                                        contry: o,
                                        provice: "云南省", city: "昆明市", district: "五华区",
                                       
                                       
										//	 provice: "上海市",city: "上海市",district: "静安区",
                                        
                                        
                                        locationTime: Date.now()
                                    })
                                }),
                                s.setError(function(o) {
                                    n("address", r),
                                    e.tlog("gps:getAddressByLatLng:setError", o),
                                    e.logStd("gps-LogStd", "-run gps:getAddressByLatLng:setError" + t.toJSON(o)),
                                    clearTimeout(a),
                                    i.reject(o)
                                }),
                                a = setTimeout(function() {
                                    o = !0,
                                    e.tlog("gps:getAddressByLatLng:timeout"),
                                    e.logStd("gps-LogStd", "-run gps:getAddressByLatLng:timeout"),
                                    i.resolve({
                                        contry: "海外",
                                        provice: "海外",
                                        city: "海外",
                                        district: "海外",
                                        locationTime: Date.now()
                                    })
                                },
                                6e3)
                            })).then(function(t) {
                                e.tlog("gps:getAddressByLatLng", t),
                                i.contry = t.contry,
                                i.provice = t.provice,
                                i.city = t.city,
                                i.district = t.district,
                                i.locationTime = t.locationTime,
                                a.resolve()
                            }).fail(a.reject)
                        },
                        fail: function(o) {
                            n("location", r),
                            e.tlog("getAreaByWx: ", "fail"),
                            e.tlog("fail: ", o),
                            "undefined" != typeof Fdp && Fdp.bssMonitor(142),
                            e.logStd("gps-LogStd", "-run getLocationFail" + t.toJSON(o)),
                            e.statusMsg("当前微信版本不支持定位或没开启定位服务，请联系活动主办单位", ""),
                            clearTimeout(s),
                            a.reject()
                        },
                        cancel: function() {
                            n("location", r),
                            e.tlog("getAreaByWx: ", "cancel"),
                            e.statusMsg("用户拒绝了授权地理位置信息", ""),
                            clearTimeout(s),
                            a.reject()
                        }
                    })
                });
                s = setTimeout(function() {
                    e.tlog("gps:getAddressTimeout", "timeout: more than 10s."),
                    e.logStd("gps-LogStd", "-run gps:getAddressTimeout"),
                    e.statusMsg("无法开启活动,请在您的移动设备中开启定位服务后尝试", ""),
                    a.reject()
                },
                1e4)
            } catch(t) {
                a.reject()
            }
        })
    }
    function n(t, o) {
        var i = (Date.now() - o) / 1e3,
        n = i > 9 ? "location" == t ? 10 : 20 : ("location" == t ? 0 : 10) + Math.ceil(i);
        e.logDog(1000295, n)
    }
    e.checkAreaLimitByWx = function(n, r, a, s) {
        return e.showLoadToast("数据加载中"),
        t.Deferred(function(c) {
            i(n).then(function() {
                return e.Res.load("js_city").then(function() {
                    return site_cityUtil.getCityList()
                })
            }).then(function() {
                return function(i) {
                    return t.Deferred(function(t) {
                        i && o ? (e.hideLoadToast(), e.otherAjaxComplete(), e.showMsgToast2({
                            bodyMsg: "无法获取您当前的位置,您当前所在的位置是否为海外地区",
                            isTwoFootBtn: !0,
                            primaryBtnText: "是的,我在海外",
                            defaultBtnText: "不,不在海外",
                            primaryBtnFn: function() {
                                t.resolve()
                            },
                            defaultBtnFn: function() {
                                e.statusMsg("当前无法获取您的位置,无法开始活动", ""),
                                t.reject("noLocation")
                            }
                        })) : t.resolve()
                    })
                } (s).fail(function(t) {
                    "noLocation" != t || c.reject({
                        cmd: t
                    })
                })
            }).then(function() {
                var o = function(o, i, n) {
                    var r = o.provice,
                    a = o.city,
                    s = o.district;
                    if (i.length > 0) {
                        if (!r || !a) return e.logErr("ipInfo null", t.toJSON(o)),
                        !n && e.statusMsg("微信获取地理位置接口正在维护中，无法获取您的地理位置。请稍后重试", ""),
                        "busyness";
                        for (var c = !0,
                        l = 0; l < i.length; l++) {
                            var g = i[l].split("-"),
                            d = site_cityUtil.getInfo(g[0]);
                            if (1 == d.parentId) {
                                if (d.name.indexOf(r) > -1 || r.indexOf(d.name) > -1) {
                                    c = !1;
                                    break
                                }
                            } else if (0 != d.parentId) {
                                var u = g[1] ? site_cityUtil.getInfo(g[1]) : null;
                                if (d.name.indexOf(a) > -1 || a.indexOf(d.name) > -1 || u && (u.name.indexOf(a) > -1 || a.indexOf(u.name) > -1) && (d.name.indexOf(s) > -1 || s.indexOf(d.name) > -1)) {
                                    c = !1;
                                    break
                                }
                            }
                        }
                        if (c) return ! n && e.statusMsg("您当前所在的地区（" + a + (a == s ? "": s || "") + "）不在可参与区域范围", ""),
                        "limit"
                    }
                    return "ok"
                } (n, r, a);
                e.tlog("checkAreaLimit result: ", o),
                "ok" === o ? c.resolve() : c.reject({
                    cmd: o
                })
            }).always(function() {
                e.hideLoadToast(),
                e.otherAjaxComplete()
            }).fail(function() {
                c.reject({
                    cmd: "areaLimitFail"
                })
            })
        })
    }
} (jQuery, HdGame);